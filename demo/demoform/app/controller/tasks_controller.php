<?php// $Id$/** * Controller_Tasks 控制器 */class Controller_Tasks extends Controller_Abstract{    //显示	function actionIndex()	{        // 为 $this->_view 指定的值将会传递数据到视图中		# $this->_view['text'] = 'Hello!';		$user=$this->_app->currentUserObject();		if (!empty($user)) {		    $tasks = Tasks::find('owner_id = ?', $user->id())->getAll();    		$this->_view['tasks'] = $tasks;    		//从缓存中查找用户信息    		$this->_view['usename'] = $user['username'];    		return;		}		$this->_view['msgflag'] = 'nodata';    	//print_r($tasks->$_props['tsak_id']) ;	}	//创建	function actionCreate()	{		$form = new Form_Task();		$this->_view['subject'] = '';		$this->_view['description'] = '';	    $user = $this->_app->currentUserObject();	 	if (!empty($user)) {			if ($this->_context->isPOST() && $form->validate($_POST))			{						 		// 通过用户对象创建任务		        $task = $user->createTask($form['subject']->value, $form['description']->value);		 		        // 保存并重定向浏览器		        $task->save();		        return $this->_redirect(url('tasks/index'));		 					}	 	}	 	$this->_view['usename'] = $user['username'];		$this->_view['form'] = $form;	}	//修改	function actionEdit()	{	    // 查询指定 ID，并且其所有者是当前用户的任务（禁止修改他人的任务）	    $task = Tasks::find('task_id = ? AND [owner.user_id] = ?',	    	$this->_context->task_id,	    	$this->_app->currentUserObject()->id())->query();	    	  	dump($task["subject"]);	    // if (!$task->id())	    // {	    //     // 如果任务的 ID 无效，视图修改的任务不存在或者不是当前用户创建的	    //     return $this->_redirect(url('tasks/index'));	    // }		//$form = new Form_Task(url('tasks/Edit'));		$form = new Form_Task();		if ($this->_context->isPOST() && $form->validate($_POST))		{			// changeProps() 方法可以批量修改 task 对象的属性，但不会修改只读属性的值	         //$a=$task->changeProps($form->values());	         //$task = new Tasks($form->values());	 		$task->subject = "hahaha";	        // 保存并重定向浏览器	       // $task->save();					}	    $user = $this->_app->currentUserObject();	    $this->_view['usename'] = $user['username'];	    $this->_view['form'] = $form;	    $this->_viewname = 'edit';	}	//删除	function actionDelete()	{		Tasks::meta()->destroyWhere('task_id = ? AND [owner.user_id] = ?',        $this->_context->task_id,        $this->_app->currentUserObject()->id());        return $this->_redirect(url('tasks/index')); //    return $this->_redirectMessage( //        '删除成功', //        '您已经成功删除了一个任务', //        url('tasks/index'));	// }	}}